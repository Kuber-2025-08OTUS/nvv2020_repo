#!/bin/bash

set -x

NAMESPACE="homework"
SERVICE_ACCOUNT="cd"
TOKEN_FILE="token"
KUBECONFIG_FILE="cd-kubeconfig"
TOKEN_DURATION="24h"

echo "üîß Setting up ServiceAccount $SERVICE_ACCOUNT in namespace $NAMESPACE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ namespace
if ! kubectl get namespace $NAMESPACE > /dev/null 2>&1; then
    echo "‚ùå Namespace $NAMESPACE does not exist. Please create it first."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ ServiceAccount
if ! kubectl get serviceaccount $SERVICE_ACCOUNT -n $NAMESPACE > /dev/null 2>&1; then
    echo "‚ùå ServiceAccount $SERVICE_ACCOUNT does not exist in namespace $NAMESPACE. Please create it first."
    exit 1
fi

echo "‚úÖ Namespace and ServiceAccount exist"

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–ª–∞—Å—Ç–µ—Ä–∞
CLUSTER_NAME=$(kubectl config view --minify -o jsonpath='{.clusters[0].name}')
APISERVER=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}')

if [ -z "$CLUSTER_NAME" ] || [ -z "$APISERVER" ]; then
    echo "‚ùå Cannot determine cluster name or API server"
    exit 1
fi

echo "üìù Cluster: $CLUSTER_NAME"
echo "üåê API Server: $APISERVER"

# –ò–∑–≤–ª–µ–∫–∞–µ–º CA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo "üìÑ Extracting CA certificate..."
kubectl get secret $SERVICE_ACCOUNT-token -n $NAMESPACE -o jsonpath='{.data.ca\.crt}' | base64 --decode > ca.crt

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
echo "üîë Extracting token..."
TOKEN=$(kubectl get secret $SERVICE_ACCOUNT-token -n $NAMESPACE -o jsonpath='{.data.token}' | base64 --decode)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª
echo "$TOKEN" > $TOKEN_FILE
echo "‚úÖ Token saved to $TOKEN_FILE"

# –°–æ–∑–¥–∞–µ–º kubeconfig
echo "üõ†Ô∏è Creating kubeconfig..."
kubectl config set-cluster $CLUSTER_NAME \
  --certificate-authority=ca.crt \
  --server=$APISERVER \
  --kubeconfig=$KUBECONFIG_FILE

kubectl config set-credentials $SERVICE_ACCOUNT \
  --token=$TOKEN \
  --kubeconfig=$KUBECONFIG_FILE

kubectl config set-context $SERVICE_ACCOUNT-context \
  --cluster=$CLUSTER_NAME \
  --user=$SERVICE_ACCOUNT \
  --namespace=$NAMESPACE \
  --kubeconfig=$KUBECONFIG_FILE

kubectl config use-context $SERVICE_ACCOUNT-context \
  --kubeconfig=$KUBECONFIG_FILE

echo "‚úÖ Kubeconfig saved to $KUBECONFIG_FILE"
echo "üìã Verification commands:"
echo "  kubectl --kubeconfig=$KUBECONFIG_FILE get pods"
echo "  kubectl --kubeconfig=$KUBECONFIG_FILE auth can-i '*' '*'"